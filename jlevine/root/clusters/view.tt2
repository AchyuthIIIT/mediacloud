[% title = 'Cluster Run: ' _ run.description %] [% INCLUDE include/header.tt2 %]
    <table>
      <tr>
        <th>
          start date
        </th>
        <th>
          end date
        </th>
        <th>
          clusters
        </th>
        <th>
          tag
        </th>
        <th>
          description
        </th>
      </tr>
      <tr>
        <td>
          [% run.start_date.substr(0, 10) %]
        </td>
        <td>
          [% run.end_date.substr(0, 10) %]
        </td>
        <td>
          [% run.num_clusters %]
        </td>
        <td>
          [% run.tag_name | html %]
        </td>
        <td>
          [% run.description | html %]
        </td>
      </tr>
    </table>
    <p><b>Cluster Run Results</b></p>
    <div class='inline left'>
    [% cl_off = media_clusters.0.media_clusters_id %]
    [% FOREACH cluster IN media_clusters %]
      <fieldset>
        <p>
          <span class="cluster_color" data-id="[% cluster.media_clusters_id - cl_off %]"></span>
          <b>[% cluster.description %]</b> 
        </p>
        <p>
          Media
        </p>
        <p>
          [% FOREACH medium IN cluster.media %]
            [ <a href='[% c.uri_for('/feeds/list/') _ medium.media_id %]'>[% medium.name %]</a> <a href='[% medium.url %]'>&gt;</a> ]
          [% END #[% FOREACH medium IN cluster.media %]
        </p>
        <!-- FIXME - dashboard requires a media_set for each cluster to work now

  [% params = { media_set_type => 'cluster',
                media_sets_id => cluster.media_clusters_id,
                media_set_name => cluster.description,
                date => '2009-10-15' } %]

  <p>              
  <a href="[% c.uri_for( '/dashboard/view', params ) | url %]">View Cluster in Dashboard</a>
  </p>
  -->
        <p>
          External Features
        </p>
        <p>
          [% FOREACH word IN cluster.external_features %] [ [% word.term %] ([% word.weight | format( '%.3f' ) %]) ] [% END #[%FOREACH word IN cluster.external_features %]
        </p>
        <p>
          Internal Features
        </p>
        <p>
          [% FOREACH word IN cluster.internal_features %] [ [% word.term %] ([% word.weight | format( '%.3f' ) %]) ] [% END #[%FOREACH word IN cluster.internal_features %]
        </p>
      </fieldset>
      <br />
    [% END #[% FOREACH cluster IN media_clusters %]
    </div>
    <div class='inline right'>
      <script type="text/javascript+protovis">
        var sources = [% data %];
      
        var w = document.body.clientWidth  * 0.49,
            h = 400; // document.body.clientHeight  / 2,
            colors = pv.Colors.category20();

        var vis = new pv.Panel()
            .width(w)
            .height(h)
            .fillStyle("white")
            // .event("mousedown", pv.Behavior.pan())
            // .event("mousewheel", pv.Behavior.zoom())
            ;

        var force = vis.add(pv.Layout.Force)    
            .iterations(200)
            .bound(true)
            // .dragConstant(10)
            // .chargeMinDistance(0.5)
            .chargeConstant(-100)
            // .chargeTheta(0.1)
            // .springConstant(0.01)
            // .springDamping(0.5)
            .springLength(15)
            .nodes(sources.nodes)
            .links(sources.links);

        force.link.add(pv.Line)
            .lineWidth(0.1); // Don't specify this!!

        force.node.add(pv.Dot)
            // .size(0) //looks sweet!
            .size(function(d) (d.linkDegree + 4) * Math.pow(this.scale, -1.5)) // default
            // .size(function(d) d.size)
            .fillStyle(function(d) d.fix ? "brown" : colors(d.group))
            // .fillStyle(function() this.active() ? "orange" : "steelblue")
            .strokeStyle(function() this.fillStyle().darker())
            .lineWidth(1) 
            .title(function(d) d.nodeName)
            // .event("mousedown", pv.Behavior.drag())
            // .event("drag", force);
            // .def("fillStyle", colors(this.parent.group)) 
            // .event("mouseover", function() this.fillStyle("orange")) // override
            // .event("mouseout", function() this.fillStyle(undefined)) // restore
            ;

        vis.render(); 
      </script>
      <script type="text/javascript+protovis">
      // fix colors
        $('span.cluster_color').each( function(index) {
          var i = $(this).attr("data-id");
          var color = pv.Colors.category20()(i).color;
          $(this).css('background-color', color);
        });
      </script>
    </div>
  </body>
</html>
